package test.GameTest;

import model.Board;
import model.EmptyBagException;
import model.TileBag;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

class BoardTest {

	private Board b;
	private TileBag tilebag;

	@BeforeEach
	public void setup() {
		this.b = new Board();
		this.tilebag = new TileBag(36);
		tilebag.populateBag();
	}

	/**
	 * Test if isValidLocation is working as expected
	 */
	@Test
	void testValidLocation() {
		assertTrue(b.isValidLocation(0));
		assertTrue(b.isValidLocation(35));
		assertFalse(b.isValidLocation(40));
	}

	/**
	 * Test if location is empty
	 * 
	 * @throws EmptyBagException
	 */
	@Test
	void testIsEmptyLocation() throws EmptyBagException {
		assertTrue(b.isEmptyLocation(0));
		b.movePiece(0, tilebag.takeRandomPiece());
		assertFalse(b.isEmptyLocation(0));
	}

	/**
	 * Test bonusQuotients generated by Board class and BoardLocation class
	 */
	@Test
	void testBonusQuotients() {
		assertEquals(1, b.getBoardLocation(0).getScorePoint());
		assertEquals(2, b.getBoardLocation(10).getScorePoint());
		assertEquals(3, b.getBoardLocation(2).getScorePoint());
		assertEquals(4, b.getBoardLocation(11).getScorePoint());
	}

	/**
	 * Test if takePiece() method of Board works
	 * @throws EmptyBagException 
	 */
	@Test
	void testGetPiece() throws EmptyBagException {
		b.movePiece(0, tilebag.takeRandomPiece());
		assertNotNull(b.getPiece(0));
	}

}
